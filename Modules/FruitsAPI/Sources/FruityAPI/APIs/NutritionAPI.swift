//
// NutritionAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class NutritionAPI {

    /**
     Request Fruits information by nutrition value
     
     - parameter nutrition: (path) Nutritions of the Fruit. 
     - parameter min: (query) Optional minimum nutrition value 
     - parameter max: (query) Optional maximum nutrition value 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func findFruitByNutrition(nutrition: String, min: Double, max: Double, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: [Fruits]?, _ error: Error?) -> Void)) -> RequestTask {
        return findFruitByNutritionWithRequestBuilder(nutrition: nutrition, min: min, max: max).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Request Fruits information by nutrition value
     - GET /fruit/{nutrition}
     - Get Fruits with given nutrition between min and max parameter. At least one query parameter has to be given.
     - parameter nutrition: (path) Nutritions of the Fruit. 
     - parameter min: (query) Optional minimum nutrition value 
     - parameter max: (query) Optional maximum nutrition value 
     - returns: RequestBuilder<[Fruits]> 
     */
    open class func findFruitByNutritionWithRequestBuilder(nutrition: String, min: Double, max: Double) -> RequestBuilder<[Fruits]> {
        var localVariablePath = "/fruit/{nutrition}"
        let nutritionPreEscape = "\(APIHelper.mapValueToPathItem(nutrition))"
        let nutritionPostEscape = nutritionPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{nutrition}", with: nutritionPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "min": (wrappedValue: min.encodeToJSON(), isExplode: true),
            "max": (wrappedValue: max.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<[Fruits]>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }
}
