//
// FoundByTypeAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class FoundByTypeAPI {

    /**
     Request fruits with given family
     
     - parameter family: (path) Family of the Fruit. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func getFruitsByFamily(family: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: [Fruits]?, _ error: Error?) -> Void)) -> RequestTask {
        return getFruitsByFamilyWithRequestBuilder(family: family).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Request fruits with given family
     - GET /fruit/family/{family}
     - Get all Fruits available in the database in a list form which belong to a given family.
     - parameter family: (path) Family of the Fruit. 
     - returns: RequestBuilder<[Fruits]> 
     */
    open class func getFruitsByFamilyWithRequestBuilder(family: String) -> RequestBuilder<[Fruits]> {
        var localVariablePath = "/fruit/family/{family}"
        let familyPreEscape = "\(APIHelper.mapValueToPathItem(family))"
        let familyPostEscape = familyPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{family}", with: familyPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<[Fruits]>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Request fruits with given genus
     
     - parameter genus: (path) Genus of the Fruit. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func getFruitsByGenus(genus: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: [Fruits]?, _ error: Error?) -> Void)) -> RequestTask {
        return getFruitsByGenusWithRequestBuilder(genus: genus).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Request fruits with given genus
     - GET /fruit/genus/{genus}
     - Get all Fruits available in the database in a list form which belong to a given genus.
     - parameter genus: (path) Genus of the Fruit. 
     - returns: RequestBuilder<[Fruits]> 
     */
    open class func getFruitsByGenusWithRequestBuilder(genus: String) -> RequestBuilder<[Fruits]> {
        var localVariablePath = "/fruit/genus/{genus}"
        let genusPreEscape = "\(APIHelper.mapValueToPathItem(genus))"
        let genusPostEscape = genusPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{genus}", with: genusPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<[Fruits]>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Request fruits with given order
     
     - parameter order: (path) Order of the Fruit. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func getFruitsByOrder(order: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: [Fruits]?, _ error: Error?) -> Void)) -> RequestTask {
        return getFruitsByOrderWithRequestBuilder(order: order).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Request fruits with given order
     - GET /fruit/order/{order}
     - Get all Fruits available in the database in a list form which belong to a given order.
     - parameter order: (path) Order of the Fruit. 
     - returns: RequestBuilder<[Fruits]> 
     */
    open class func getFruitsByOrderWithRequestBuilder(order: String) -> RequestBuilder<[Fruits]> {
        var localVariablePath = "/fruit/order/{order}"
        let orderPreEscape = "\(APIHelper.mapValueToPathItem(order))"
        let orderPostEscape = orderPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{order}", with: orderPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<[Fruits]>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }
}
